// <auto-generated />
using System;
using CineGest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CineGest.Migrations
{
    [DbContext(typeof(CineGestDB))]
    [Migration("20200513232822_UpdatedForeignKeys")]
    partial class UpdatedForeignKeys
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CineGest.Models.Cinema_Movie", b =>
                {
                    b.Property<int>("MovieFK")
                        .HasColumnType("int");

                    b.Property<int>("CinemaFK")
                        .HasColumnType("int");

                    b.HasKey("MovieFK", "CinemaFK");

                    b.HasIndex("CinemaFK");

                    b.ToTable("Cinema_Movie");
                });

            modelBuilder.Entity("CineGest.Models.Cinemas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityFK")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityFK");

                    b.ToTable("Cinema");
                });

            modelBuilder.Entity("CineGest.Models.Cities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("CineGest.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Duration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Highlighted")
                        .HasColumnType("bit");

                    b.Property<int>("Min_age")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("CineGest.Models.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CineGest.Models.Room_Movie", b =>
                {
                    b.Property<int>("MovieFK")
                        .HasColumnType("int");

                    b.Property<int>("RoomFK")
                        .HasColumnType("int");

                    b.Property<int>("CinemaFK")
                        .HasColumnType("int");

                    b.Property<int?>("CinemaFK1")
                        .HasColumnType("int");

                    b.Property<int?>("CinemaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("MovieFK", "RoomFK");

                    b.HasIndex("CinemaId", "CinemaFK1");

                    b.HasIndex("RoomFK", "CinemaFK");

                    b.ToTable("Room_Movie");
                });

            modelBuilder.Entity("CineGest.Models.Rooms", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("CinemaFK")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Room_number")
                        .HasColumnType("int");

                    b.HasKey("Id", "CinemaFK");

                    b.HasIndex("CinemaFK");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("CineGest.Models.Ticket", b =>
                {
                    b.Property<int>("MovieFK")
                        .HasColumnType("int");

                    b.Property<int>("RoomFK")
                        .HasColumnType("int");

                    b.Property<int>("UserFK")
                        .HasColumnType("int");

                    b.Property<int?>("Room_MovieRoomMovieFK")
                        .HasColumnType("int");

                    b.Property<int?>("Room_MovieRoomRoomFK")
                        .HasColumnType("int");

                    b.Property<int>("seat_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("MovieFK", "RoomFK", "UserFK");

                    b.HasIndex("UserFK");

                    b.HasIndex("Room_MovieRoomMovieFK", "Room_MovieRoomRoomFK");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("CineGest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Age")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleFK");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CineGest.Models.Cinema_Movie", b =>
                {
                    b.HasOne("CineGest.Models.Cinemas", "Cinema")
                        .WithMany("CinemaList")
                        .HasForeignKey("CinemaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineGest.Models.Movies", "Movie")
                        .WithMany("CinemaMovieList")
                        .HasForeignKey("MovieFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineGest.Models.Cinemas", b =>
                {
                    b.HasOne("CineGest.Models.Cities", "City")
                        .WithMany()
                        .HasForeignKey("CityFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineGest.Models.Room_Movie", b =>
                {
                    b.HasOne("CineGest.Models.Movies", "Movie")
                        .WithMany("RoomMovieList")
                        .HasForeignKey("MovieFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineGest.Models.Rooms", "Cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId", "CinemaFK1");

                    b.HasOne("CineGest.Models.Rooms", "Room")
                        .WithMany("RoomMovieList")
                        .HasForeignKey("RoomFK", "CinemaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineGest.Models.Rooms", b =>
                {
                    b.HasOne("CineGest.Models.Cinemas", "Cinema")
                        .WithMany("RoomList")
                        .HasForeignKey("CinemaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CineGest.Models.Ticket", b =>
                {
                    b.HasOne("CineGest.Models.User", "User")
                        .WithMany("TicketList")
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineGest.Models.Room_Movie", "Room_MovieMovie")
                        .WithMany("Room_MovieList")
                        .HasForeignKey("MovieFK", "RoomFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CineGest.Models.Room_Movie", "Room_MovieRoom")
                        .WithMany()
                        .HasForeignKey("Room_MovieRoomMovieFK", "Room_MovieRoomRoomFK");
                });

            modelBuilder.Entity("CineGest.Models.User", b =>
                {
                    b.HasOne("CineGest.Models.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
